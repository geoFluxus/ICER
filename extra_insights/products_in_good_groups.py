import pandas as pd

def create_distribution_list(codes, group_name, good_files=[2]):
    goods_descriptions = pd.read_excel('../data/geoFluxus/Goederencodelijst_2023.xlsx')
    goods_amounts = pd.DataFrame()
    for i in good_files:
        temp = pd.read_csv(f'../data/geoFluxus/CBS_productdata_2023_{i}.csv', delimiter=';')
        goods_amounts = pd.concat([goods_amounts, temp])

    codes_prefix = ['GN' + i for i in codes]
    codes_int = [int(i) for i in codes]
    print(goods_descriptions.dtypes)
    goods_amounts = goods_amounts[goods_amounts['GN'].isin(codes_prefix)]
    goods_amounts = goods_amounts.groupby('GN')[['TotaleInvoerwaarde_1',	'TotaleInvoerhoeveelheid_2',
                                                'TotaleUitvoerwaarde_3',	'TotaleUitvoerhoeveelheid_4']].sum().reset_index()
    goods_descriptions = goods_descriptions[goods_descriptions['CN2023'].isin(codes_int)]
    goods_descriptions = goods_descriptions[['CN2023', 'Unnamed: 2']]
    goods_descriptions['CN2023'] = goods_descriptions['CN2023'].apply(lambda x: 'GN' + str(x))
    goods_descriptions.rename(columns={'Unnamed: 2': 'Description'}, inplace=True)

    df = pd.merge(goods_amounts, goods_descriptions, how = 'left', left_on='GN', right_on='CN2023')
    #print(goods_amounts['Landen'].unique())
    print(df)
    df['Invoer_percent'] = df['TotaleInvoerwaarde_1'] / df['TotaleInvoerwaarde_1'].sum()
    df['Uitvoer_percent'] = df['TotaleUitvoerwaarde_3'] / df['TotaleUitvoerwaarde_3'].sum()

    print('Invoer', df['TotaleInvoerwaarde_1'].sum())
    print('Uitvoer', df['TotaleUitvoerwaarde_3'].sum())

    df.to_excel(f'../data/geoFluxus/{group_name}_percentages.xlsx', index=False)

def find_goods_per_nst_code(category = 24):
    names = pd.read_excel('../data/geoFluxus/CBS_names.xlsx', sheet_name='CBS_code_merger')
    nst_code = names[names['Goederengroep_nr'] == category]['NST_code'].values[0]
    print(nst_code)
    conversions = pd.read_excel('../data/geoFluxus/NST2007_CN2023_Table.xlsx')
    codes = conversions[conversions['NST2007_CODE'] == nst_code][['CN2023_CODE', 'CN2023_NAME']]
    code_names = codes.copy()
    code_names['GN'] = codes['CN2023_CODE'].str.replace(' ', '').apply(lambda x: 'GN' + x)
    codes = list(code_names['GN'])
    goods_amounts = pd.DataFrame()
    for i in range(1,5):
        temp = pd.read_csv(f'../data/geoFluxus/CBS_productdata_2023_{i}.csv', delimiter=';')
        goods_amounts = pd.concat([goods_amounts, temp])
    goods = goods_amounts[goods_amounts['GN'].isin(codes)].groupby('GN')[['TotaleInvoerwaarde_1', 'TotaleUitvoerwaarde_3']].sum()
    goods = pd.merge(goods, code_names, on='GN')
    return goods

def create_nst_goods_excel(categories = [24,52,55,56,57,58,59,60,67]):
    dfs = {}
    for i in categories:
        dfs[i] = find_goods_per_nst_code(i)
    with pd.ExcelWriter(f'../data/geoFluxus/product_streams_2023.xlsx') as writer:
        for i in dfs:
            dfs[i].to_excel(writer, sheet_name=str(i), index=False)

if __name__ == '__main__':
    ore_codes = ['26020000', '26030000', '26040000', '26050000', '26060000', '26070000', '26080000', '26090000',
                 '26100000',
                 '26110000', '26121010', '26121090', '26122010', '26122090', '26131000', '26139000', '26140000',
                 '26151000',
                 '26159000', '26161000', '26169000', '26171000', '26179000']

    sand_gravel_codes = ['25041000', '25049000', '25051000', '25059000', '25061000', '25062000', '25070020', '25070080',
                         '25081000', '25083000', '25084000', '25085000', '25086000', '25087000', '25090000', '25120000',
                         '25131000', '25132000', '25140000', '25151100', '25151200', '25152000', '25161100', '25161200',
                         '25162000', '25169000', '25171010', '25171020', '25171080', '25172000', '25174100', '25174900',
                         '25181000', '25191000', '25199010', '25199030', '25199090', '25201000', '25210000', '25241000',
                         '25249000', '25251000', '25252000', '25253000', '25261000', '25262000', '25291000', '25293000',
                         '25301000', '26219000', '27030000', '27149000', ]


    food_tabacco_codes = ['04079010','04079090','04081120','04081180','04081920','04081981','04081989','04089120',
                          '04089180','04089920','04089980','09011200','09012100','09012200','09019010','09019090',
                          '09021000','09023000','09041200','09042200','09052000','09062000','09072000','09081200',
                          '09082200','09083200','09092200','09093200','09096200','09101200','09102090','09109190',
                          '09109939','09109999','13021100','13021200','13021300','13021400','13021905','13021970',
                          '13022010','13022090','13023100','13023210','13023290','13023900','16021000','16030010',
                          '16030080','17011210','17011290','17011310','17011390','17011410','17011490','17019100',
                          '17019910','17019990','17022010','17022090','17029071','17029075','17029079','17031000',
                          '17039000','17041010','17041090','17049010','17049030','17049051','17049055','17049061',
                          '17049065','17049071','17049075','17049081','17049099','18020000','18031000','18032000',
                          '18040000','18050000','18061015','18061020','18061030','18061090','18062010','18062030',
                          '18062050','18062070','18062080','18062095','18063100','18063210','18063290','18069011',
                          '18069019','18069031','18069039','18069050','18069060','18069070','18069090','19011000',
                          '19019011','19019019','19019091','19019095','19019099','19021100','19021910','19021990',
                          '19022010','19022030','19022091','19022099','19023010','19023090','19024010','19024090',
                          '19051000','19052010','19052030','19052090','19053111','19053119','19053130','19053191',
                          '19053199','19053205','19053211','19053219','19053291','19053299','19054010','19054090',
                          '19059010','19059020','19059030','19059045','19059055','19059070','19059080','20051000',
                          '20060010','20060031','20060035','20060038','20060091','20060099','20071010','20071091',
                          '20071099','21011100','21011292','21011298','21012020','21012092','21012098','21013011',
                          '21013019','21013091','21013099','21021010','21021031','21021039','21021090','21022011',
                          '21022019','21022090','21023000','21031000','21032000','21033010','21033090','21039010',
                          '21039030','21039090','21041000','21042000','21061020','21061080','21069020','21069030',
                          '21069051','21069055','21069059','21069092','21069098','22090011','22090019','22090091',
                          '22090099','23032010','23032090','24012035','24012060','24012070','24012085','24012095',
                          '24013000','24021000','24022010','24022090','24029000','24031100','24031910','24031990',
                          '24039100','24039910','24039990','25010091','35021110','35021190','35021910','35021990',
                          ]

    other_electronics = [
        '39259020','85011010','85011091','85011093','85011099','85012000','85013100','85013200','85013300','85013400',
        '85014020','85014080','85015100','85015220','85015230','85015290','85015350','85015381','85015394','85015399',
        '85016120','85016180','85016200','85016300','85016400','85017100','85017200','85018000','85021120','85021180',
        '85021200','85021320','85021340','85021380','85022020','85022040','85022060','85022080','85023920','85023980',
        '85024000','85030010','85030091','85030099','85041020','85041080','85042100','85042210','85042290','85042300',
        '85043121','85043129','85043180','85043200','85043300','85043400','85044060','85044083','85044085','85044086',
        '85044095','85045000','85049011','85049013','85049017','85049090','85052000','85059021','85059029','85059050',
        '85059090','85061011','85061018','85061091','85061098','85063000','85064000','85065010','85065030','85065090',
        '85066000','85068005','85068080','85069000','85071020','85071080','85072020','85072080','85073020','85073080',
        '85075000','85076000','85078000','85079030','85079080','85122000','85131000','85139000','85151100','85151910',
        '85151990','85152100','85152900','85153100','85153913','85153918','85153990','85158010','85158090','85159020',
        '85159080','85301000','85308000','85309000','85312020','85312040','85312095','85318040','85318070','85319000',
        '85321000','85322100','85322200','85322300','85322400','85322500','85322900','85323000','85329000','85331000',
        '85332100','85332900','85333100','85333900','85334010','85334090','85339000','85351000','85352100','85352900',
        '85353010','85353090','85354000','85359000','85361010','85361050','85361090','85362010','85362090','85363010',
        '85363030','85363090','85364110','85364190','85364900','85365003','85365005','85365007','85365011','85365015',
        '85365019','85365080','85366110','85366190','85366910','85366930','85366990','85367000','85369001','85369010',
        '85369040','85369095','85371010','85371091','85371095','85371098','85372091','85372099','85381000','85389011',
        '85389019','85389091','85389099','85391000','85392130','85392192','85392198','85392210','85392290','85392930',
        '85392992','85392998','85393110','85393190','85393220','85393290','85393920','85393980','85394100','85394900',
        '85395100','85395200','85399010','85399090','85431000','85432000','85434000','85437001','85437002','85437003',
        '85437004','85437005','85437006','85437007','85437008','85437009','85437010','85437030','85437050','85437060',
        '85437090','85439000','85441110','85441190','85441900','85442000','85444210','85444290','85444920','85444991',
        '85444993','85444995','85444999','85446010','85446090','85447000','85451100','85451900','85452000','85459010',
        '85459090','85469010','85469090','85472000','85479000','85480020','85480030','85480090','90011010','90011090',
        '94051140','94051150','94051190','94051940','94051950','94051990','94052140','94052150','94052190','94052940',
        '94052950','94052990','94053100','94053900','94054110','94054131','94054139','94054210','94054231','94054239',
        '94054910','94054940','94054990','94055000','94056120','94056180','94056920','94056980','94059900'
        ]
    create_distribution_list(food_tabacco_codes, group_name='other_electronics', good_files=[1,2])
    create_nst_goods_excel()